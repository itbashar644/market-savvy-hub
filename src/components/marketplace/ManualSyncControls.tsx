
import React, { useState } from 'react';
import { Card, CardContent } from '@/components/ui/card';
import { RefreshCw } from 'lucide-react';
import { toast } from 'sonner';
import { useWildberriesSync } from '@/hooks/database/useWildberriesSync';
import { useOzonSync } from '@/hooks/database/useOzonSync';
import { useWildberriesStockUpdate } from '@/hooks/database/useWildberriesStockUpdate';
import { useOzonStockUpdate } from '@/hooks/database/useOzonStockUpdate';
import { useWildberriesStock } from '@/hooks/database/useWildberriesStock';
import { WildberriesStockStatistics } from './components/WildberriesStockStatistics';
import { ManualSyncButtons } from './components/ManualSyncButtons';
import { StockUpdateButtons } from './components/StockUpdateButtons';

const ManualSyncControls = () => {
  const [syncing, setSyncing] = useState<string | null>(null);
  const { syncProducts: syncWbProducts } = useWildberriesSync();
  const { syncProducts: syncOzonProducts } = useOzonSync();
  const { updateStock: updateWbStock } = useWildberriesStockUpdate();
  const { updateStock: updateOzonStock } = useOzonStockUpdate();
  const { stockItems, loading: stockLoading } = useWildberriesStock();

  console.log('üîç [ManualSyncControls] –û—Å—Ç–∞—Ç–∫–∏ WB –∏–∑ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã:', stockItems.length);
  console.log('üîç [ManualSyncControls] –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ WB:', stockLoading);
  console.log('üîç [ManualSyncControls] –ü–µ—Ä–≤—ã–µ 5 –æ—Å—Ç–∞—Ç–∫–æ–≤ WB:', stockItems.slice(0, 5).map(item => ({
    internal_sku: item.internal_sku,
    wildberries_sku: item.wildberries_sku,
    stock_quantity: item.stock_quantity
  })));

  const handleWildberriesSync = async () => {
    setSyncing('wildberries-sync');
    try {
      await syncWbProducts();
      toast.success('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Wildberries –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (error) {
      console.error('Wildberries sync error:', error);
      toast.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Wildberries: ' + (error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    } finally {
      setSyncing(null);
    }
  };

  const handleOzonSync = async () => {
    setSyncing('ozon-sync');
    try {
      await syncOzonProducts();
      toast.success('‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è Ozon –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    } catch (error) {
      console.error('Ozon sync error:', error);
      toast.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ Ozon: ' + (error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    } finally {
      setSyncing(null);
    }
  };

  const getWildberriesStockUpdates = () => {
    console.log('üîç [STOCK UPDATE] –ü–û–î–ì–û–¢–û–í–ö–ê –î–ê–ù–ù–´–• –ò–ó –ù–û–í–û–ô –¢–ê–ë–õ–ò–¶–´ WB');
    console.log('üì¶ [STOCK UPDATE] –û—Å—Ç–∞—Ç–∫–æ–≤ WB –≤ —Ç–∞–±–ª–∏—Ü–µ:', stockItems.length);
    
    if (stockItems.length === 0) {
      console.log('‚ùå [STOCK UPDATE] –ù–ï–¢ –û–°–¢–ê–¢–ö–û–í WB –í –¢–ê–ë–õ–ò–¶–ï!');
      return [];
    }
    
    const stockUpdates = stockItems.map((item, index) => {
            const wbSku = String(item.wildberries_sku).trim();

      if (!/^\d+$/.test(wbSku)) {
        console.warn(`‚ö†Ô∏è [STOCK UPDATE] –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç WB SKU: ${item.wildberries_sku}`);
        return null;
      }
      
      const stockData = {
        offer_id: wbSku,
        stock: item.stock_quantity,
        sku: item.internal_sku,
        name: `–¢–æ–≤–∞—Ä ${item.internal_sku}`
      };
      
      console.log(`üì§ [STOCK UPDATE] –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω: "${item.internal_sku}" -> WB SKU: ${stockData.offer_id}, –æ—Å—Ç–∞—Ç–æ–∫: ${stockData.stock}`);
      
      return stockData;
    }).filter(Boolean);

    console.log(`üéØ [STOCK UPDATE] –ò–¢–û–ì–û –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –¥–ª—è WB API: ${stockUpdates.length} —Ç–æ–≤–∞—Ä–æ–≤`);
    return stockUpdates;
  };

  const handleStockUpdate = async (marketplace: 'wildberries' | 'ozon') => {
    setSyncing(`${marketplace}-stock`);
    try {
      console.log(`üöÄ [STOCK UPDATE] –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è: ${marketplace}`);
      console.log(`üìä [STOCK UPDATE] –í—Å–µ–≥–æ –æ—Å—Ç–∞—Ç–∫–æ–≤ WB –≤ —Ç–∞–±–ª–∏—Ü–µ: ${stockItems.length}`);
      
      if (stockItems.length === 0) {
        toast.error('‚ùå –í —Ç–∞–±–ª–∏—Ü–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ WB –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö!', {
          description: '–°–Ω–∞—á–∞–ª–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ SKU —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª "–¢–æ–≤–∞—Ä—ã" ‚Üí "–ò–º–ø–æ—Ä—Ç SKU WB".'
        });
        return;
      }
      
      let stockUpdates;
      if (marketplace === 'wildberries') {
        stockUpdates = getWildberriesStockUpdates();
      } else {
        // –î–ª—è Ozon –ø–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
        stockUpdates = [];
      }
      
      console.log(`üìä [STOCK UPDATE] –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è ${marketplace}:`, stockUpdates.slice(0, 3));

      if (stockUpdates.length === 0) {
        toast.warning(`‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ ${marketplace === 'wildberries' ? 'Wildberries' : 'Ozon'}`, {
          description: `–í—Å–µ–≥–æ –æ—Å—Ç–∞—Ç–∫–æ–≤ WB: ${stockItems.length}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ.`
        });
        return;
      }

      if (marketplace === 'wildberries') {
        console.log(`üì§ [STOCK UPDATE] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${stockUpdates.length} —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –≤ Wildberries...`);
        await updateWbStock(stockUpdates);
        toast.success('‚úÖ –û—Å—Ç–∞—Ç–∫–∏ Wildberries –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
      } else {
        console.log(`üì§ [STOCK UPDATE] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º ${stockUpdates.length} —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ –≤ Ozon...`);
        await updateOzonStock(stockUpdates);
        toast.success('‚úÖ –û—Å—Ç–∞—Ç–∫–∏ Ozon –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
      }
    } catch (error) {
      console.error(`üí• [STOCK UPDATE] ${marketplace} stock update error:`, error);
      toast.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ ${marketplace}: ` + (error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    } finally {
      setSyncing(null);
    }
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É, –µ—Å–ª–∏ –æ—Å—Ç–∞—Ç–∫–∏ WB –µ—â–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
  if (stockLoading) {
    return (
      <div className="space-y-6">
        <Card>
          <CardContent className="p-8 text-center">
            <RefreshCw className="w-8 h-8 animate-spin mx-auto mb-4" />
            <p>–ó–∞–≥—Ä—É–∑–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ Wildberries –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...</p>
          </CardContent>
        </Card>
      </div>
    );
  }

  const totalWbItems = stockItems.length;
  const itemsWithStock = stockItems.filter(item => item.stock_quantity > 0).length;

  return (
    <div className="space-y-6">
      <WildberriesStockStatistics 
        totalWbItems={totalWbItems}
        itemsWithStock={itemsWithStock}
      />

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <ManualSyncButtons
          syncing={syncing}
          onWildberriesSync={handleWildberriesSync}
          onOzonSync={handleOzonSync}
        />

        <StockUpdateButtons
          syncing={syncing}
          totalWbItems={totalWbItems}
          onStockUpdate={handleStockUpdate}
        />
      </div>
    </div>
  );
};

export default ManualSyncControls;
